{"ast":null,"code":"import { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function InterruptScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(_StyledComponent, {\n    className: \"flex-1 items-center justify-center bg-black\",\n    component: View,\n    children: _jsxs(_StyledComponent, {\n      className: \"text-white\",\n      component: Text,\n      children: [\"Una delle soluzioni per evitare che si verifichino \", _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate(\"Deadlock\");\n        },\n        children: _jsx(_StyledComponent, {\n          className: \"text-white\",\n          component: Text,\n          children: \"deadlock\"\n        })\n      }), \", starvation o altri problemi possiamo utilizzare\"]\n    })\n  });\n}\n_NativeWindStyleSheet.create({\n  styles: {\n    \"flex-1\": {\n      \"flexGrow\": 1,\n      \"flexShrink\": 1,\n      \"flexBasis\": \"0%\"\n    },\n    \"items-center\": {\n      \"alignItems\": \"center\"\n    },\n    \"justify-center\": {\n      \"justifyContent\": \"center\"\n    },\n    \"bg-black\": {\n      \"backgroundColor\": \"#000\"\n    },\n    \"text-white\": {\n      \"color\": \"#fff\"\n    }\n  }\n});","map":{"version":3,"names":["InterruptScreen","navigation","navigate"],"sources":["C:/Users/catri/Documents/Code/App-Bianco/screens/InterruptScreen.js"],"sourcesContent":["import { Button, View, Text, TouchableOpacity} from \"react-native\";\r\n\r\nexport default function InterruptScreen({ navigation }) {\r\n  return (\r\n    <View className=\"flex-1 items-center justify-center bg-black\">\r\n      <Text className=\"text-white\">\r\n        Una delle soluzioni per evitare che si verifichino <TouchableOpacity onPress={()=> {navigation.navigate(\"Deadlock\")}}>\r\n  <Text className=\"text-white\">deadlock</Text>\r\n</TouchableOpacity>, starvation\r\n        o altri problemi possiamo utilizzare\r\n      </Text>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";;;;;;;;AAEA,eAAe,SAASA,eAAe,OAAiB;EAAA,IAAdC,UAAU,QAAVA,UAAU;EAClD;IACQ,SAAS,EAAC,6CAA6C;IAAA;IAAA;MACrD,SAAS,EAAC,YAAY;MAAA;MAAA,WAAC,qDACwB,OAAC,gBAAgB;QAAC,OAAO,EAAE,mBAAK;UAACA,UAAU,CAACC,QAAQ,CAAC,UAAU,CAAC;QAAA,CAAE;QAAA;UACrH,SAAS,EAAC,YAAY;UAAA;UAAA,UAAC;QAAQ;MAAA,EACpB,qDAEb;IAAA;EAAA;AAGN;AAAC;EAAA;IAAA;MAAA;MAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}