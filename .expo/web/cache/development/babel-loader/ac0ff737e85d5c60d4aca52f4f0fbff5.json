{"ast":null,"code":"import { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function InterruptScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(_StyledComponent, {\n    className: \"flex-1 items-center justify-center bg-black\",\n    component: View,\n    children: _jsx(_StyledComponent, {\n      className: \"w\",\n      component: View,\n      children: _jsx(_StyledComponent, {\n        className: \"text-white text-xl\",\n        component: Text,\n        children: \"Una delle soluzioni per evitare che si verifichino deadlock, starvation o altri problemi \\xE8 la disabilitazioni degli interrupt, quando un programma entra nella sezione critica nessun processo potr\\xE0 \\\"rubare\\\" il processore, cosicch\\xE9 il processo potr\\xE0 finire la sua sessione critica\"\n      })\n    })\n  });\n}\n_NativeWindStyleSheet.create({\n  styles: {\n    \"h-10\": {\n      \"height\": 40\n    },\n    \"h-1\": {\n      \"height\": 4\n    },\n    \"w-10\": {\n      \"width\": 40\n    },\n    \"w-1\": {\n      \"width\": 4\n    },\n    \"w-16\": {\n      \"width\": 64\n    },\n    \"w-20\": {\n      \"width\": 80\n    },\n    \"w-12\": {\n      \"width\": 48\n    },\n    \"w-14\": {\n      \"width\": 56\n    },\n    \"flex-1\": {\n      \"flexGrow\": 1,\n      \"flexShrink\": 1,\n      \"flexBasis\": \"0%\"\n    },\n    \"items-center\": {\n      \"alignItems\": \"center\"\n    },\n    \"justify-center\": {\n      \"justifyContent\": \"center\"\n    },\n    \"bg-black\": {\n      \"backgroundColor\": \"#000\"\n    },\n    \"text-white\": {\n      \"color\": \"#fff\"\n    },\n    \"text-xl\": {\n      \"fontSize\": 20,\n      \"lineHeight\": 28\n    }\n  }\n});","map":{"version":3,"names":["InterruptScreen","navigation"],"sources":["C:/Users/catri/Documents/Code/App-Bianco/screens/InterruptScreen.js"],"sourcesContent":["import { Button, View, Text, TouchableOpacity } from \"react-native\";\r\n\r\nexport default function InterruptScreen({ navigation }) {\r\n  return (\r\n    <View className=\"flex-1 items-center justify-center bg-black\">\r\n      <View className=\"w\">\r\n      <Text className=\"text-white text-xl\">\r\n\r\n        Una delle soluzioni per evitare che si verifichino deadlock, starvation\r\n        o altri problemi è la disabilitazioni degli interrupt, quando un\r\n        programma entra nella sezione critica nessun processo potrà \"rubare\" il\r\n        processore, cosicché il processo potrà finire la sua sessione critica\r\n      </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";;;;;;;AAEA,eAAe,SAASA,eAAe,OAAiB;EAAA,IAAdC,UAAU,QAAVA,UAAU;EAClD;IACQ,SAAS,EAAC,6CAA6C;IAAA;IAAA;MACrD,SAAS,EAAC,GAAG;MAAA;MAAA;QACb,SAAS,EAAC,oBAAoB;QAAA;QAAA,UAAC;MAMrC;IAAA;EAAA;AAIN;AAAC;EAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}