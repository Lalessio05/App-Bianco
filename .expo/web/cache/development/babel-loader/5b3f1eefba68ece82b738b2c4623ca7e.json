{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport get from 'lodash.get';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction noop() {}\nvar TreeView = function (_React$Component) {\n  _inherits(TreeView, _React$Component);\n  var _super = _createSuper(TreeView);\n  function TreeView(props) {\n    var _this;\n    _classCallCheck(this, TreeView);\n    _this = _super.call(this, props);\n    _this.getInitialState = function () {\n      return {\n        expandedNodeKeys: {}\n      };\n    };\n    _this.hasChildrenNodes = function (node) {\n      return get(node, _this.props.childrenKey + \".length\", 0) > 0;\n    };\n    _this.isExpanded = function (id) {\n      if (_this.props.isNodeExpanded !== noop) {\n        return _this.props.isNodeExpanded(id);\n      } else {\n        return get(_this.state.expandedNodeKeys, id, _this.props.initialExpanded);\n      }\n    };\n    _this.updateNodeKeyById = function (id, expanded) {\n      return function (_ref) {\n        var expandedNodeKeys = _ref.expandedNodeKeys;\n        return {\n          expandedNodeKeys: Object.assign({}, expandedNodeKeys, _defineProperty({}, id, expanded))\n        };\n      };\n    };\n    _this.collapseNode = function (id) {\n      return _this.setState(_this.updateNodeKeyById(id, false));\n    };\n    _this.expandNode = function (id) {\n      return _this.setState(_this.updateNodeKeyById(id, true));\n    };\n    _this.toggleCollapse = function (id) {\n      var method = _this.isExpanded(id) ? 'collapseNode' : 'expandNode';\n      _this[method](id);\n    };\n    _this.handleNodePressed = function () {\n      var _ref3 = _asyncToGenerator(function* (_ref2) {\n        var node = _ref2.node,\n          level = _ref2.level;\n        var nodePressResult = yield _this.props.onNodePress({\n          node: node,\n          level: level\n        });\n        if (nodePressResult !== false && _this.hasChildrenNodes(node)) {\n          _this.toggleCollapse(node[_this.props.idKey]);\n        }\n      });\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    _this.Node = function (_ref4) {\n      var nodes = _ref4.nodes,\n        level = _ref4.level;\n      var NodeComponent = _this.Node;\n      return nodes.map(function (node) {\n        var isExpanded = _this.isExpanded(node[_this.props.idKey]);\n        var hasChildrenNodes = _this.hasChildrenNodes(node);\n        var shouldRenderLevel = hasChildrenNodes && isExpanded;\n        return _jsxs(View, {\n          children: [_jsx(TouchableOpacity, {\n            activeOpacity: _this.props.activeOpacityNode,\n            disabled: _this.props.shouldDisableTouchOnLeaf({\n              node: node,\n              level: level\n            }),\n            onPress: function onPress() {\n              return _this.handleNodePressed({\n                node: node,\n                level: level\n              });\n            },\n            onLongPress: function onLongPress() {\n              return _this.props.onNodeLongPress({\n                node: node,\n                level: level\n              });\n            },\n            children: React.createElement(_this.props.renderNode, {\n              node: node,\n              level: level,\n              isExpanded: isExpanded,\n              hasChildrenNodes: hasChildrenNodes\n            })\n          }), shouldRenderLevel && _jsx(NodeComponent, {\n            nodes: node[_this.props.childrenKey],\n            level: level + 1\n          })]\n        }, node[_this.props.idKey]);\n      });\n    };\n    _this.state = _this.getInitialState();\n    return _this;\n  }\n  _createClass(TreeView, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var hasDataUpdated = prevProps.data !== this.props.data;\n      var hasIdKeyUpdated = prevProps.idKey !== this.props.idKey;\n      var childrenKeyUpdated = prevProps.childrenKey !== this.props.childrenKey;\n      if (hasDataUpdated || hasIdKeyUpdated || childrenKeyUpdated) {\n        this.setState(this.getInitialState());\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(this.Node, {\n        nodes: this.props.data,\n        level: 0\n      });\n    }\n  }]);\n  return TreeView;\n}(React.Component);\nTreeView.propTypes = {\n  data: PropTypes.array.isRequired,\n  renderNode: PropTypes.func.isRequired,\n  initialExpanded: PropTypes.bool,\n  idKey: PropTypes.string,\n  activeOpacityNode: PropTypes.number,\n  childrenKey: PropTypes.string,\n  onNodePress: PropTypes.func,\n  onNodeLongPress: PropTypes.func,\n  isNodeExpanded: PropTypes.func,\n  shouldDisableTouchOnLeaf: PropTypes.func\n};\nTreeView.defaultProps = {\n  initialExpanded: false,\n  idKey: 'id',\n  childrenKey: 'children',\n  activeOpacityNode: 0.2,\n  onNodePress: noop,\n  onNodeLongPress: noop,\n  isNodeExpanded: noop,\n  shouldDisableTouchOnLeaf: function shouldDisableTouchOnLeaf() {\n    return false;\n  }\n};\nexport default TreeView;","map":{"version":3,"names":["get","PropTypes","React","noop","TreeView","props","getInitialState","expandedNodeKeys","hasChildrenNodes","node","childrenKey","isExpanded","id","isNodeExpanded","state","initialExpanded","updateNodeKeyById","expanded","Object","assign","collapseNode","setState","expandNode","toggleCollapse","method","handleNodePressed","level","nodePressResult","onNodePress","idKey","Node","nodes","NodeComponent","map","shouldRenderLevel","activeOpacityNode","shouldDisableTouchOnLeaf","onNodeLongPress","createElement","renderNode","prevProps","hasDataUpdated","data","hasIdKeyUpdated","childrenKeyUpdated","Component","propTypes","array","isRequired","func","bool","string","number","defaultProps"],"sources":["C:/Users/catri/Documents/py/App-Bianco/node_modules/react-native-final-tree-view/index.js"],"sourcesContent":["import get from 'lodash.get'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { TouchableOpacity, View } from 'react-native'\n\nfunction noop() {}\n\nclass TreeView extends React.Component {\n  static propTypes = {\n    data: PropTypes.array.isRequired,\n    renderNode: PropTypes.func.isRequired,\n    initialExpanded: PropTypes.bool,\n    idKey: PropTypes.string,\n    activeOpacityNode: PropTypes.number,\n    childrenKey: PropTypes.string,\n    onNodePress: PropTypes.func,\n    onNodeLongPress: PropTypes.func,\n    isNodeExpanded: PropTypes.func,\n    shouldDisableTouchOnLeaf: PropTypes.func,\n  }\n\n  static defaultProps = {\n    initialExpanded: false,\n    idKey: 'id',\n    childrenKey: 'children',\n    activeOpacityNode: 0.2,\n    onNodePress: noop,\n    onNodeLongPress: noop,\n    isNodeExpanded: noop,\n    shouldDisableTouchOnLeaf: () => false,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = this.getInitialState()\n  }\n\n  getInitialState = () => ({\n    expandedNodeKeys: {},\n  })\n\n  componentDidUpdate(prevProps) {\n    const hasDataUpdated = prevProps.data !== this.props.data\n    const hasIdKeyUpdated = prevProps.idKey !== this.props.idKey\n    const childrenKeyUpdated = prevProps.childrenKey !== this.props.childrenKey\n\n    if (hasDataUpdated || hasIdKeyUpdated || childrenKeyUpdated) {\n      this.setState(this.getInitialState())\n    }\n  }\n\n  hasChildrenNodes = (node) =>\n    get(node, `${this.props.childrenKey}.length`, 0) > 0\n\n  isExpanded = (id) => {\n    if (this.props.isNodeExpanded !== noop) {\n      return this.props.isNodeExpanded(id)\n    } else {\n      return get(this.state.expandedNodeKeys, id, this.props.initialExpanded)\n    }\n  }\n\n  updateNodeKeyById =\n    (id, expanded) =>\n    ({ expandedNodeKeys }) => ({\n      expandedNodeKeys: Object.assign({}, expandedNodeKeys, {\n        [id]: expanded,\n      }),\n    })\n\n  collapseNode = (id) => this.setState(this.updateNodeKeyById(id, false))\n\n  expandNode = (id) => this.setState(this.updateNodeKeyById(id, true))\n\n  toggleCollapse = (id) => {\n    const method = this.isExpanded(id) ? 'collapseNode' : 'expandNode'\n\n    this[method](id)\n  }\n\n  handleNodePressed = async ({ node, level }) => {\n    const nodePressResult = await this.props.onNodePress({ node, level })\n\n    if (nodePressResult !== false && this.hasChildrenNodes(node)) {\n      this.toggleCollapse(node[this.props.idKey])\n    }\n  }\n\n  Node = ({ nodes, level }) => {\n    const NodeComponent = this.Node\n\n    return nodes.map((node) => {\n      const isExpanded = this.isExpanded(node[this.props.idKey])\n      const hasChildrenNodes = this.hasChildrenNodes(node)\n      const shouldRenderLevel = hasChildrenNodes && isExpanded\n\n      return (\n        <View key={node[this.props.idKey]}>\n          <TouchableOpacity\n            activeOpacity={this.props.activeOpacityNode}\n            disabled={this.props.shouldDisableTouchOnLeaf({ node, level })}\n            onPress={() => this.handleNodePressed({ node, level })}\n            onLongPress={() => this.props.onNodeLongPress({ node, level })}\n          >\n            {React.createElement(this.props.renderNode, {\n              node,\n              level,\n              isExpanded,\n              hasChildrenNodes,\n            })}\n          </TouchableOpacity>\n          {shouldRenderLevel && (\n            <NodeComponent\n              nodes={node[this.props.childrenKey]}\n              level={level + 1}\n            />\n          )}\n        </View>\n      )\n    })\n  }\n\n  render() {\n    return <this.Node nodes={this.props.data} level={0} />\n  }\n}\n\nexport default TreeView\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}